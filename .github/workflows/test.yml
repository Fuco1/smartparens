name: CI

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  UNDERCOVER_CONFIG: "(\"smartparens.el\" \"smartparens-*.el\" (:report-format lcov) (:send-report nil))"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        emacs-version:
          - '28.2'
          - '29.4'
          - '30.1'
          - 'snapshot'
        experimental: [false]
        include:
        - os: ubuntu-latest
          emacs-version: snapshot
          experimental: true
        - os: macos-latest
          emacs-version: snapshot
          experimental: true
        - os: windows-latest
          emacs-version: snapshot
          experimental: true

    steps:
    - uses: actions/checkout@v4

    - uses: jcs090218/setup-emacs@master
      with:
        version: ${{ matrix.emacs-version }}

    - uses: actions/setup-python@v5

    - uses: emacs-eask/setup-eask@master
      with:
        version: 'snapshot'

    - name: Run tests
      run: |
        eask clean all
        eask package
        eask install
        eask compile

    - name: Install dependencies
      run: 'eask install-deps --dev'

    - name: Run ERT tests
      run: |
        eask exec ert-runner --reporter ert+duration
        eask exec emacs --eval "(setq byte-compile-error-on-warn t)" -L . --batch -f batch-byte-compile smartparens.el smartparens-*[^pkg].el

    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        flag-name: emacs-${{ matrix.emacs-version }}
        parallel: true

  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel-finished: true
